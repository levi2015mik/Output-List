{"version":3,"sources":["actions/index.js","reducers/index.js","components/Rules.js","components/El.js","components/List.js","components/Loader.js","components/ErrorHandler.js","containers/App.js","index.js"],"names":["wait","time","a","Promise","resolve","setTimeout","loadPersons","dispatch","getState","persons","url","nItems","httpError","startLoad","axios","get","list","addPersons","data","sortpersons","endLoad","error","message","addError","deleteError","type","payload","rootReducer","combineReducers","state","sort","loader","sortList","action","el","el2","Date","timestamp","getTime","stateCpy","Rules","props","className","value","onChange","onClick","onSort","src","alt","createError","El","useState","details","setDetails","person","toLocaleString","onMouseOver","onMouseOut","firstName","lastName","phone","email","List","countShowBtnToLast","window","pageYOffset","innerHeight","document","body","scrollHeight","isShowBtnToLast","setShowBtnToLast","setShowBtnToLastVal","useEffect","addEventListener","removeEventListener","scroll","documentElement","map","item","key","Loader","style","display","status","ErrorHandler","App","Component","componentDidMount","this","componentDidUpdate","prevProps","reload","event","target","code","checked","min","max","rand","Math","random","round","randomInteger","render","bind","href","connect","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","getElementById"],"mappings":"mPAEO,MAWDA,EAAI,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAAc,IAAIC,QAAQC,GAASC,WAAWD,EAAQH,KAAtD,2CAAH,sDAKGK,EAAa,IACtB,uCAAO,WAAOC,EAASC,GAAhB,qBAAAN,EAAA,6DACGO,EAAUD,IAAWC,QACvBC,EAFD,UARF,2MAQE,iBAEsBD,EAAQE,QAC9BF,EAAQG,YAAWF,GAAG,eAAWD,EAAQG,YAC5CL,EAASM,KAJN,kBAMkBC,IAAMC,IAAIL,GAN5B,OAMKM,EANL,OAOCT,EAASU,EAAWD,EAAKE,OACzBX,EAASY,KACTZ,EAASa,KATV,yDAWCb,EAASa,KACHC,EAAQ,CAACC,QAAQ,KAAEA,SACzBf,EAASgB,EAASF,IAbnB,UAcOrB,EAAK,KAdZ,QAekB,kBAAd,KAAEsB,SAA6Bf,EAASD,KAC3CC,EAASiB,KAhBV,0DAAP,wDA4BSP,EAAaD,IAAM,CAC5BS,KA5CqB,YA6CrBC,QAAQV,IAICH,EAAY,KAAI,CACzBY,KAhDsB,aAiDtBC,SAAQ,IAGCN,EAAU,KAAI,CACvBK,KArDsB,aAsDtBC,SAAQ,IAGCP,EAAc,KAAI,CAC3BM,KA3D4B,qBAmEnBF,EAAYF,IAAD,CACpBI,KAlEqB,YAmErBC,QAAQL,IAGCG,EAAc,KAAI,CAC3BC,KAtEwB,iBC4DbE,MAJKC,0BAAgB,CAClCnB,QAnDc,CAACoB,EAAM,CAACb,KAAK,GAAGc,KALR,EAKsBnB,OAAO,GAAGoB,OAAO,EAAEC,SAAS,IAAIC,KAC5E,OAAQA,EAAOR,MACb,IDZqB,YCYL,OAAO,2BAAII,GAAX,IAAkBb,KAAMiB,EAAOP,UAE/C,IDb4B,mBCaN,CAClB,IAAIM,EACJ,OAAQH,EAAMC,MACV,KAZY,EAaRE,EAAWH,EAAMb,KACjB,MACJ,KAde,EAeXgB,EAAWH,EAAMb,KAAKc,KAClB,CAACI,EAAGC,IAAO,IAAIC,KAAKF,EAAGG,WAAYC,UAAa,IAAIF,KAAKD,EAAIE,WAAYC,WACzE,MACR,KAjBiB,EAkBbN,EAAWH,EAAMb,KAAKc,KAClB,CAACI,EAAGC,KAA4F,GAA5E,IAAIC,KAAKF,EAAGG,WAAYC,UAAa,IAAIF,KAAKD,EAAIE,WAAYC,YAI9F,OAAO,2BAAIT,GAAX,IAAiBG,aAGrB,IDlCoB,WCkCL,CACb,IAAIF,EACJ,OAAOD,EAAMC,MACX,KA/BgB,EA+BDA,EA9BI,EA8BgB,MACnC,KA/BmB,EA+BDA,EA9BG,EA8BmB,MACxC,KA/BqB,EA+BDA,EAhCD,EAmCrB,OAAO,2BAAID,GAAX,IAAkBC,KAAKA,IAGzB,ID9CwB,eC8CL,OAAO,2BAAID,GAAX,IAAkBlB,OAAQsB,EAAOP,UAEpD,ID5CsB,aC4CL,OAAO,2BAAIG,GAAX,IAAiBE,OAAQE,EAAOP,UAEjD,ID7CqB,YC6CL,OAAO,2BAAIG,GAAX,IAAiBR,MAAOY,EAAOP,UAE/C,ID9CwB,eC8CL,CACjB,IAAIa,EAAQ,eAAQV,GAEpB,cADOU,EAASlB,MACTkB,EAEP,IDlD2B,oBCkDH,OAAO,2BAAIV,GAAX,IAAiBjB,UAAUqB,EAAOP,UAC5D,QAAS,OAAOG,MC1DL,SAASW,EAAMC,GAI1B,OAAQ,yBAAKC,UAAW,SACpB,0CACI,4BAAQC,MAAOF,EAAM9B,OAAQiC,SAAUH,EAAMG,UACzC,4BAAQD,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,KAAf,OACA,4BAAQA,MAAO,KAAf,SAGR,mDACuB,4BAAQE,QAASJ,EAAMK,QAAQ,yBAAKC,IAf7C,CAAC,kBAAkB,wBAAwB,2BAeiBN,EAAMX,MAAOkB,IAAK,WAE5F,6BACI,uDAA4B,2BAAOJ,SAAUH,EAAMQ,YAAaxB,KAAM,gB,WCpBnE,SAASyB,EAAGT,GAAQ,MAAD,EACDU,oBAAS,GADR,mBACvBC,EADuB,KACfC,EADe,KAExBhB,EAAa,IAAID,KAAKK,EAAMa,OAAOjB,WAAYkB,iBACrD,OACI,yBACIb,UAAW,KACXc,YAAa,IAAIH,GAAW,GAC5BI,WAAa,IAAIJ,GAAW,IAE5B,4BAAKZ,EAAMa,OAAOI,UAAlB,IAA8BjB,EAAMa,OAAOK,UAC3C,2BAAIlB,EAAMa,OAAOhC,SAChB8B,GAAY,4BACT,4BAAI,wCAAJ,IAAyBX,EAAMa,OAAOM,OACtC,4BAAI,wCAAJ,IAAyBnB,EAAMa,OAAOO,QAE1C,8BAAOxB,GACP,8BCfG,SAASyB,EAAKrB,GAGzB,MAAMsB,EAAqB,IAAMC,OAAOC,YAAcD,OAAOE,YAAcC,SAASC,KAAKC,aAAe,IAHxE,EAIWlB,mBAASY,KAJpB,mBAIzBO,EAJyB,KAITC,EAJS,KAO1BC,EAAqB,IAAID,EAAiBR,KAgBhD,OAbAU,oBAAU,KACNF,EAAiBR,KACjBC,OAAOU,iBAAiB,SAASF,GAC1B,IAAIR,OAAOW,oBAAoB,SAASH,IACjD,CAAC/B,EAAMhC,UASD,yBAAKiC,UAAW,QACnB4B,GACD,yBAAK5B,UAAW,eACZ,4BAAQG,QARhB,WACImB,OAAOY,OAAO,EAAET,SAASU,gBAAgBR,gBAQjC,yBAAKtB,IAAK,WAAYC,IAAK,WAIlCP,EAAMhC,QAAQqE,IAAI,CAACxB,EAAOyB,IACvB,kBAAC7B,EAAD,CAAI8B,IAAKD,EAAMzB,OAAQA,MCjCpB,SAAS2B,EAAOxC,GAC3B,OACA,yBACIyC,MAAO,CAACC,QAAS1C,EAAM2C,OAAS,QAAS,QACzC1C,UAAW,mBAEX,6BAAK,yBAAKK,IAAK,aAAcC,IAAK,WCL3B,SAASqC,EAAa5C,GACjC,OACI,yBACIC,UAAW,iBACXwC,MAAO,CAACC,QAAS1C,EAAMpB,MAAQ,QAAS,SAExC,6BACI,yBAAK0B,IAAK,UAAWC,IAAK,WAC1B,2BAAIP,EAAMpB,OAASoB,EAAMpB,MAAMC,WCK/C,MAAMgE,UAAYC,YAEhBC,oBACIC,KAAKhD,MAAMlC,SAASD,KAGxBoF,mBAAmBC,IAInBC,OAAOC,GACHJ,KAAKhD,MAAMlC,SPwCW,CACxBkB,KAlEwB,eAmExBC,QO1CmCmE,EAAMC,OAAOnD,QAC9C8C,KAAKhD,MAAMlC,SAASD,KAIxBwB,OACI2D,KAAKhD,MAAMlC,SPSRA,IACHA,EAAS,CAACkB,KAxCQ,aAyClBlB,EAASY,OOPb8B,YAAY4C,GACR,IAAIE,EAAO,EACRF,EAAMC,OAAOE,UAChBD,EA/BN,SAAuBE,EAAKC,GAExB,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GACpD,OAAOG,KAAKE,MAAMH,GA4BTI,CAAc,IAAI,MACzBd,KAAKhD,MAAMlC,SPwCW,CACxBkB,KAzE6B,oBA0E7BC,QO1CmCqE,IACjCN,KAAKhD,MAAMlC,SAASD,KAExBkG,SACE,OACE,6BACE,kBAAChE,EAAD,CACI7B,OAAQ8E,KAAKhD,MAAMhC,QAAQE,OAC3BmB,KAAM2D,KAAKhD,MAAMhC,QAAQqB,KACzBc,SAAU6C,KAAKG,OAAOa,KAAKhB,MAC3B3C,OAAQ2C,KAAK3D,KAAK2E,KAAKhB,MACvBxC,YAAawC,KAAKxC,YAAYwD,KAAKhB,QAEvC,kBAAC3B,EAAD,CAAMrD,QAASgF,KAAKhD,MAAMhC,QAAQuB,WAClC,kBAACiD,EAAD,CAAQG,OAAQK,KAAKhD,MAAMhC,QAAQsB,SACnC,kBAACsD,EAAD,CAAchE,MAAOoE,KAAKhD,MAAMhC,QAAQY,QACtC,qFAAkB,uBAAGyE,OAAO,SAASY,KAAK,qBAAxB,aAabC,kBAPS9E,IAEf,CACLpB,QAAQoB,EAAMpB,UAIHkG,CAAyBrB,GC5DxC,MAAMsB,EAAa,CAAEC,KACfC,EAAQC,sBACZC,EAAQC,8BACRC,6BAAmBN,KAGrBJ,iBACE,kBAAC,IAAD,CAAUM,MAAOA,GACf,kBAAC,EAAD,OAEF3C,SAASgD,eAAe,W","file":"static/js/main.5895914a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const SET_ITEMS_PP = 'SET_ITEMS_PP';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const ADD_ITEMS = 'ADD_ITEMS';\r\nexport const ADD_SORTED_ITEMS = 'ADD_SORTED_ITEMS';\r\nexport const SET_LOADER = 'SET_LOADER';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const DELETE_ERROR = 'DELETE_ERROR';\r\nexport const CREATE_HTTP_ERROR = 'CREATE_HTTP_ERROR';\r\n\r\nconst URL = `http://www.filltext.com/?id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&message=%7Blorem%7C32%7D&timestamp={date}&delay=3`;\r\n\r\nconst wait = async (time)=>new Promise(resolve=>setTimeout(resolve,time));\r\n\r\n/**\r\n * Санка, загружающая данные с api по url, взятой из константы\r\n */\r\nexport const loadPersons= () => {\r\n    return async (dispatch,getState)=>{\r\n        const persons = getState().persons;\r\n        let url = `${URL}&rows=${persons.nItems}`;\r\n        if(persons.httpError) url +=`&err=${persons.httpError}`;\r\n        dispatch(startLoad());\r\n        try {\r\n            let list = await axios.get(url);\r\n            dispatch(addPersons(list.data));\r\n            dispatch(sortpersons());\r\n            dispatch(endLoad())\r\n        } catch (e) {\r\n            dispatch(endLoad());\r\n            const error = {message:e.message};\r\n            dispatch(addError(error));\r\n            await wait(5000);\r\n            if(e.message === \"Network Error\") dispatch(loadPersons());\r\n            dispatch(deleteError());\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const sort = ()=>{\r\n  return dispatch=>{\r\n      dispatch({type:SET_SORT});\r\n      dispatch(sortpersons());\r\n  }\r\n};\r\nexport const addPersons = list=> ({\r\n    type:ADD_ITEMS,\r\n    payload:list\r\n});\r\n\r\n\r\nexport const startLoad = ()=>({\r\n    type: SET_LOADER,\r\n    payload:true\r\n});\r\n\r\nexport const endLoad = ()=>({\r\n    type: SET_LOADER,\r\n    payload:false\r\n});\r\n\r\nexport const sortpersons = ()=>({\r\n    type:ADD_SORTED_ITEMS\r\n});\r\n\r\nexport const changeNItems = (count)=>({\r\n    type: SET_ITEMS_PP,\r\n    payload: count\r\n});\r\n\r\nexport const addError = (error)=>({\r\n    type: ADD_ERROR,\r\n    payload:error\r\n});\r\n\r\nexport const deleteError = ()=>({\r\n    type:DELETE_ERROR\r\n});\r\n\r\nexport const addHttpError = (error)=>({\r\n    type: CREATE_HTTP_ERROR,\r\n    payload:error\r\n});\r\n\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  SET_SORT, ADD_ITEMS,\r\n  SET_ITEMS_PP, SET_LOADER,\r\n  ADD_ERROR, DELETE_ERROR, ADD_SORTED_ITEMS,\r\n  CREATE_HTTP_ERROR\r\n} from '../actions'\r\n\r\n// Sort const for reducer persons\r\nexport const NOT_SORT = 0;\r\nexport const SORT_TO_BIG = 1;\r\nexport const SORT_TO_SMALL = 2;\r\n\r\n\r\nconst persons = (state={list:[],sort:NOT_SORT,nItems:10,loader:0,sortList:[]},action)=>{\r\n  switch (action.type) {\r\n    case ADD_ITEMS: return {...state, list: action.payload};\r\n\r\n    case ADD_SORTED_ITEMS:{\r\n        let sortList;\r\n        switch (state.sort) {\r\n            case NOT_SORT:\r\n                sortList = state.list;\r\n                break;\r\n            case SORT_TO_BIG:\r\n                sortList = state.list.sort(\r\n                    (el,el2)=>(new Date(el.timestamp)).getTime() - (new Date(el2.timestamp)).getTime()\r\n                ) ; break;\r\n            case SORT_TO_SMALL:\r\n                sortList = state.list.sort(\r\n                    (el,el2)=>{return ((new Date(el.timestamp)).getTime() - (new Date(el2.timestamp)).getTime()) * -1}\r\n                ) ; break;\r\n            default: break;\r\n        }\r\n        return {...state,sortList}\r\n    }\r\n\r\n    case SET_SORT: {\r\n      let sort;\r\n      switch(state.sort){\r\n        case NOT_SORT: sort = SORT_TO_BIG; break;\r\n        case SORT_TO_BIG: sort = SORT_TO_SMALL; break;\r\n        case SORT_TO_SMALL: sort = SORT_TO_BIG; break;\r\n        default: break;\r\n      }\r\n      return {...state, sort:sort};\r\n    }\r\n\r\n    case SET_ITEMS_PP: return {...state, nItems: action.payload};\r\n\r\n    case SET_LOADER: return {...state,loader: action.payload};\r\n\r\n    case ADD_ERROR: return {...state,error: action.payload};\r\n\r\n    case DELETE_ERROR: {\r\n      let stateCpy =  {...state};\r\n      delete stateCpy.error;\r\n      return stateCpy;\r\n    }\r\n      case CREATE_HTTP_ERROR: return {...state,httpError:action.payload};\r\n    default: return state\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  persons\r\n});\r\n\r\nexport default rootReducer\r\n","import React from \"react\";\r\n\r\nexport default function Rules(props) {\r\n    // коллекция иконок для кнопки сортировки\r\n    const sortIcons = ['icons8-sort.png','icons8-sort-to-up.png','icons8-sort-to-down.png'];\r\n\r\n    return (<div className={\"rules\"}>\r\n        <div>Output of:\r\n            <select value={props.nItems} onChange={props.onChange}>\r\n                <option value={1}>1</option>\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n                <option value={500}>500</option>\r\n            </select>\r\n        </div>\r\n        <div>\r\n            sort by: timestamp <button onClick={props.onSort}><img src={sortIcons[props.sort]} alt={\"sort\"}/></button>\r\n        </div>\r\n        <div>\r\n            <label>Generate error query <input onChange={props.createError} type={\"checkbox\"}/></label>\r\n        </div>\r\n    </div>)\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function El(props) {\r\n    const [details,setDetails] = useState(false);\r\n    const timestamp = (new Date(props.person.timestamp)).toLocaleString();\r\n    return (\r\n        <div\r\n            className={\"el\"}\r\n            onMouseOver={()=>setDetails(true)}\r\n            onMouseOut ={()=>setDetails(false)}\r\n        >\r\n            <h3>{props.person.firstName} {props.person.lastName}</h3>\r\n            <p>{props.person.message}</p>\r\n            {details && (<ul>\r\n                <li><span>Phone:</span> {props.person.phone}</li>\r\n                <li><span>Email:</span> {props.person.email}</li>\r\n            </ul>)}\r\n            <time>{timestamp}</time>\r\n            <hr/>\r\n    </div>)\r\n}","import React, {useState,useEffect} from \"react\";\r\nimport El from \"./El\";\r\n\r\nexport default function List(props) {\r\n\r\n    // возвращает true, если конец страницы не виден\r\n    const countShowBtnToLast = () => window.pageYOffset + window.innerHeight < document.body.scrollHeight - 100;\r\n    const [isShowBtnToLast,setShowBtnToLast] = useState(countShowBtnToLast());\r\n\r\n    // присвоение результата countShowBtnToLast в state\r\n    const setShowBtnToLastVal =()=>setShowBtnToLast(countShowBtnToLast());\r\n\r\n    // Через хук происходит обновление свойства isShowBtnToLast и подписка на scroll\r\n    useEffect(()=>{\r\n        setShowBtnToLast(countShowBtnToLast());\r\n        window.addEventListener('scroll',setShowBtnToLastVal);\r\n        return ()=>window.removeEventListener('scroll',setShowBtnToLastVal)\r\n    },[props.persons]);\r\n\r\n\r\n    // Прокрутка в конец\r\n    function scrollLast() {\r\n        window.scroll(0,document.documentElement.scrollHeight)\r\n    }\r\n\r\n\r\n    return (<div className={\"list\"}>\r\n        {isShowBtnToLast &&\r\n        <div className={\"btn-to-last\"}>\r\n            <button onClick={scrollLast}>\r\n                <img src={\"down.png\"} alt={\"last\"}/>\r\n            </button>\r\n        </div>\r\n        }\r\n        {props.persons.map((person,item)=>(\r\n            <El key={item} person={person}/>\r\n        ))}\r\n    </div>)\r\n}","import React from \"react\";\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n    <div\r\n        style={{display:(props.status)? \"block\": \"none\"}}\r\n        className={\"loader__wrapper\"}\r\n    >\r\n        <div><img src={\"loader.png\"} alt={\"load\"}/></div>\r\n    </div>)\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function ErrorHandler(props) {\r\n    return (\r\n        <div\r\n            className={\"error__wrapper\"}\r\n            style={{display:(props.error)? \"block\": \"none\"}}\r\n        >\r\n            <div>\r\n                <img src={\"err.png\"} alt={\"Error!\"}/>\r\n                <p>{props.error && props.error.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadPersons, changeNItems,sort,addHttpError } from '../actions'\r\nimport Rules from \"../components/Rules\";\r\nimport List from \"../components/List\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorHandler from \"../components/ErrorHandler\";\r\n\r\n// Случайное число в заданном интервале\r\nfunction randomInteger(min, max) {\r\n    // получить случайное число от (min-0.5) до (max+0.5)\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n      this.props.dispatch(loadPersons())\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n  }\r\n\r\n  // Загрузка выбранного количества персон при изменении запрашиваемого количества\r\n  reload(event){\r\n      this.props.dispatch(changeNItems(event.target.value));\r\n      this.props.dispatch(loadPersons())\r\n  }\r\n\r\n  // Сортировка по timestamp\r\n  sort(){\r\n      this.props.dispatch(sort());\r\n  }\r\n\r\n  // Попытка получить данные с ошибочным запросом\r\n  createError(event){\r\n      let code = 0;\r\n      if(event.target.checked)\r\n      code = randomInteger(400,700);\r\n      this.props.dispatch(addHttpError(code));\r\n      this.props.dispatch(loadPersons())\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Rules\r\n            nItems={this.props.persons.nItems}\r\n            sort={this.props.persons.sort}\r\n            onChange={this.reload.bind(this)}\r\n            onSort={this.sort.bind(this)}\r\n            createError={this.createError.bind(this)}\r\n        />\r\n        <List persons={this.props.persons.sortList}/>\r\n        <Loader status={this.props.persons.loader}/>\r\n        <ErrorHandler error={this.props.persons.error}/>\r\n          <footer>иконки от <a target=\"_blank\" href=\"https://icons8.ru\">Icons8</a></footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  return {\r\n    persons:state.persons\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from './reducers'\r\nimport App from './containers/App'\r\n\r\nconst middleware = [ thunk ];\r\nconst store = createStore(\r\n  reducer,composeWithDevTools(\r\n  applyMiddleware(...middleware))\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}